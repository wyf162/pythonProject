# _*_ coding: utf-8 _*_
# @Time : 2022/2/19 下午10:16 
# @Author : wangyefei
# @File : 20220219.py
from typing import List


class Solution:
    def maximumEvenSplit(self, finalSum: int) -> List[int]:
        ans = list()
        i = 2
        while finalSum > 0:
            if finalSum > 2 * i:
                ans.append(i)
            else:
                ans.append(finalSum)
            finalSum -= ans[-1]
            i = i+2

        return ans if not ans[-1] & 1 else []

    def goodTriplets(self, nums1: List[int], nums2: List[int]) -> int:
        n = len(nums1)
        hst1 = {num: idx for idx, num in enumerate(nums1)}
        hst2 = {num: idx for idx, num in enumerate(nums2)}

        ret = 0
        exclude_set1 = set()
        exclude_set2 = set()
        for i in range(n):
            for j in range(i + 1, n):
                x, y = nums1[i], nums1[j]
                idx_x, idx_y, = hst2[x], hst2[y]
                if idx_x > idx_y:
                    exclude_set1.add((x, y))

        for i in range(n):
            for j in range(i + 1, n):
                x, y = nums2[i], nums2[j]
                idx_x, idx_y, = hst1[x], hst1[y]
                if idx_x > idx_y:
                    exclude_set2.add((x, y))

        for i in range(n):
            for j in range(i + 1, n):
                x, y = nums1[i], nums1[j]
                idx_x, idx_y, = hst2[x], hst2[y]
                if (x, y) in exclude_set1 or (x, y) in exclude_set2:
                    continue
                for k in range(j + 1, n):
                    z = nums1[k]
                    idx_z = hst2[z]
                    if idx_x < idx_y < idx_z and idx_x < idx_z:
                        ret += 1

        return ret


if __name__ == '__main__':
    sol = Solution()
    final_sum = 7
    ans = sol.maximumEvenSplit(final_sum)
    print(ans)

    # nums1 = [4, 0, 1, 3, 2]
    # nums2 = [4, 1, 0, 2, 3]
    # nums1 = [167, 8, 248, 267, 45, 95, 124, 282, 56, 261, 357, 19, 384, 196, 333, 226, 107, 394, 239, 396, 68, 257, 216,
    #          37,
    #          146, 58, 278, 53, 375, 73, 17, 174, 100, 59, 262, 52, 304, 370, 316, 101, 317, 302, 345, 235, 339, 39, 152,
    #          77,
    #          296, 132, 7, 249, 158, 21, 97, 324, 398, 390, 346, 184, 256, 36, 173, 379, 150, 353, 270, 15, 67, 337, 74,
    #          50, 389,
    #          54, 217, 31, 241, 176, 204, 386, 164, 229, 232, 193, 172, 381, 201, 11, 197, 134, 268, 183, 321, 191, 373,
    #          109,
    #          314, 5, 380, 96, 142, 180, 347, 166, 20, 44, 161, 151, 367, 285, 399, 26, 156, 254, 365, 336, 35, 263, 10,
    #          301,
    #          181, 103, 128, 371, 137, 116, 75, 127, 246, 102, 63, 276, 340, 207, 160, 3, 38, 395, 186, 86, 230, 350,
    #          298, 61,
    #          284, 30, 388, 136, 210, 114, 400, 300, 213, 32, 194, 16, 12, 190, 335, 354, 364, 141, 42, 369, 215, 315,
    #          220, 266,
    #          6, 0, 306, 43, 60, 163, 187, 273, 28, 378, 179, 78, 24, 392, 22, 283, 55, 280, 253, 228, 118, 121, 376,
    #          108, 205,
    #          289, 293, 309, 145, 227, 219, 259, 311, 244, 140, 209, 334, 162, 83, 291, 288, 23, 62, 351, 33, 222, 358,
    #          117, 169,
    #          171, 47, 135, 307, 359, 202, 94, 391, 385, 66, 325, 279, 308, 25, 29, 252, 64, 144, 155, 286, 154, 46, 214,
    #          14,
    #          206, 362, 238, 265, 356, 105, 168, 119, 139, 234, 110, 13, 4, 72, 51, 157, 104, 200, 320, 208, 355, 274,
    #          27, 247,
    #          125, 342, 310, 327, 189, 272, 98, 143, 323, 93, 352, 9, 41, 374, 88, 198, 243, 258, 90, 250, 264, 383, 328,
    #          131,
    #          85, 281, 295, 303, 92, 203, 331, 80, 34, 199, 84, 275, 211, 361, 188, 299, 71, 133, 212, 40, 153, 366, 223,
    #          341,
    #          233, 312, 218, 122, 242, 185, 147, 269, 159, 69, 79, 99, 175, 348, 177, 65, 338, 305, 363, 344, 1, 322,
    #          360, 120,
    #          236, 221, 294, 2, 372, 393, 111, 106, 49, 292, 48, 57, 192, 387, 123, 148, 18, 225, 130, 255, 89, 112, 240,
    #          382,
    #          329, 82, 149, 91, 165, 319, 297, 182, 368, 87, 397, 178, 330, 237, 195, 331, 260, 318, 70, 271, 326, 377,
    #          129, 81,
    #          332, 231, 277, 113, 115, 224, 245, 349, 138, 343, 290, 287, 251, 170, 76, 126]
    # nums2 = [331, 85, 314, 88, 76, 119, 136, 345, 344, 258, 394, 146, 82, 286, 285, 307, 125, 297, 239, 357, 299, 9,
    #          171, 225,
    #          335, 181, 274, 84, 184, 107, 20, 169, 173, 371, 154, 375, 220, 59, 279, 70, 287, 199, 118, 391, 176, 228,
    #          365, 337,
    #          363, 114, 289, 155, 19, 165, 18, 233, 290, 2, 113, 380, 280, 130, 373, 263, 237, 126, 39, 55, 309, 0, 350,
    #          316,
    #          298, 112, 329, 67, 346, 78, 260, 3, 191, 210, 50, 281, 207, 128, 117, 339, 77, 293, 396, 100, 108, 218,
    #          250, 382,
    #          183, 151, 390, 175, 247, 124, 300, 296, 139, 24, 315, 261, 162, 330, 326, 273, 34, 97, 92, 254, 241, 159,
    #          47, 79,
    #          158, 216, 294, 61, 135, 320, 318, 251, 10, 23, 206, 115, 323, 379, 116, 81, 46, 332, 94, 383, 386, 358, 51,
    #          312,
    #          397, 25, 327, 127, 268, 400, 11, 99, 242, 230, 304, 106, 73, 22, 364, 54, 170, 132, 153, 141, 234, 190,
    #          385, 32,
    #          317, 257, 219, 129, 15, 179, 93, 48, 361, 140, 276, 13, 66, 192, 203, 384, 111, 367, 83, 267, 221, 57, 27,
    #          271,
    #          209, 355, 291, 328, 62, 341, 306, 58, 65, 137, 131, 389, 87, 377, 366, 161, 232, 182, 252, 120, 388, 215,
    #          195, 348,
    #          193, 12, 340, 189, 248, 144, 393, 214, 245, 163, 246, 282, 212, 395, 142, 217, 52, 334, 69, 292, 157, 331,
    #          277, 96,
    #          149, 362, 17, 177, 278, 194, 37, 283, 187, 205, 4, 213, 368, 110, 353, 264, 185, 376, 5, 30, 156, 201, 374,
    #          152,
    #          198, 101, 72, 229, 249, 14, 145, 288, 43, 38, 398, 80, 160, 186, 351, 95, 349, 123, 49, 33, 319, 26, 256,
    #          359, 238,
    #          29, 270, 240, 44, 91, 275, 211, 295, 138, 147, 347, 310, 89, 262, 360, 231, 90, 227, 204, 166, 134, 150, 7,
    #          31, 21,
    #          399, 343, 178, 56, 392, 102, 63, 1, 342, 60, 74, 121, 68, 208, 224, 226, 243, 41, 352, 105, 196, 16, 369,
    #          333, 269,
    #          284, 164, 104, 148, 6, 272, 378, 303, 266, 244, 200, 381, 143, 86, 301, 98, 259, 322, 236, 325, 75, 133,
    #          253, 354,
    #          8, 324, 180, 305, 28, 168, 188, 109, 336, 321, 338, 174, 222, 265, 372, 64, 45, 311, 122, 223, 36, 387, 53,
    #          103,
    #          255, 167, 356, 235, 172, 202, 71, 308, 370, 35, 42, 40, 197, 302]
    # ans = sol.goodTriplets(nums1, nums2)
    # print(ans)

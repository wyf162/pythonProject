# -*- coding : utf-8 -*-
# @Time: 2022/7/18 23:22
# @Author: yefei.wang
# @File: 925_min_malware_spread.py
from typing import List
from collections import defaultdict, deque


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)

        adj_tbl = defaultdict(list)

        for i in range(n):
            for j in range(n):
                if graph[i][j]:
                    adj_tbl[i].append(j)

        vis = set()
        for x in initial:
            vis.add(x)
            for adj in adj_tbl[x]:
                vis.add(adj)

        ans = len(vis)

        res = initial[0]

        for x in initial:
            vis = set()
            adj_tbl = defaultdict(list)

            for i in range(n):
                for j in range(n):
                    if i==x or j==x:
                        continue
                    if graph[i][j]:
                        adj_tbl[i].append(j)

            for y in initial:
                if y==x:
                    continue
                vis.add(y)
                for adj in adj_tbl[y]:
                    vis.add(adj)
            if len(vis) < ans:
                ans = len(vis)
                res = x
            elif len(vis)==ans and x<res:
                res = x

        return res


if __name__ == '__main__':
    sol = Solution()
    # graph = [[1, 1, 0], [1, 1, 0], [0, 0, 1]]
    # initial = [0, 1]
    graph = [[1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0],
     [0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0],
     [0, 0, 0, 0, 0, 0, 0, 0, 1]]
    initial = [6, 0, 4]
    ret = sol.minMalwareSpread(graph, initial)
    print(ret)
